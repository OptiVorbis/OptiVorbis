name: CI

on:
  push:
    branches-ignore:
      - gh-pages
  pull_request:
    types:
      - opened
      - synchronize
    branches-ignore:
      - gh-pages
  release:
    types:
      - published

env:
  MSRV: '1.73.0'

  # Set up sccache with GitHub Actions cache
  RUSTC_WRAPPER: sccache
  SCCACHE_GHA_ENABLED: true

jobs:
  msrv_check:
    name: MSRV check

    runs-on: ubuntu-22.04

    # Exclude in-repo PRs from running this job
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork

    steps:
      - name: 📥 Checkout source
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: 🧰 Install MSRV toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: ${{ env.MSRV }}

      - name: 💨 Set up sccache
        uses: mozilla-actions/sccache-action@89e9040de88b577a072e3760aaf59f585da083af # v0.0.5

      - name: ⚙️ Run tests
        run: cargo test -p optivorbis -p optivorbis_cli -p vorbis_bitpack

  ci:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - x86_64-pc-windows-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin
        include:
          - target: x86_64-unknown-linux-musl
            runner: ubuntu-22.04
          - target: aarch64-unknown-linux-musl
            runner: ubuntu-22.04
          - target: x86_64-pc-windows-gnu
            runner: windows-2022
          - target: x86_64-apple-darwin
            runner: macos-13
          - target: aarch64-apple-darwin
            runner: macos-14

    name: CI (${{ matrix.target }})
    runs-on: ${{ matrix.runner }}

    # Exclude in-repo PRs from running this job
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork

    steps:
      - name: 📥 Checkout source
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0 # Keep the commit history for proper version information

      - name: 🧰 Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          target: ${{ matrix.target }}
          components: rust-src, rustfmt, clippy

      - name: 🧰 Install ARM64 cross-compilation toolchain
        if: startsWith(matrix.target, 'aarch64-unknown-linux')
        run: |
          sudo apt update
          sudo apt install -yq gcc-aarch64-linux-gnu libc6-arm64-cross qemu-user

      - name: 🧰 Install cargo-deny
        if: matrix.target == 'x86_64-unknown-linux-musl'
        uses: taiki-e/install-action@15fe2d0590252661ba3bdfefcfabeb947f0b757f # v2
        with:
          tool: cargo-deny

      - name: 💨 Set up sccache
        uses: mozilla-actions/sccache-action@89e9040de88b577a072e3760aaf59f585da083af # v0.0.5

      - name: 📅 Gather build date and version metadata
        shell: bash
        run: |
          echo "OPTIVORBIS_VERSION=$(git describe --tags --dirty=-custom --always)" >> "$GITHUB_ENV"
          echo "OPTIVORBIS_BUILD_DATE=$(date -u +%Y-%m-%d)" >> "$GITHUB_ENV"

      - name: '🔍 Static analysis: run Clippy'
        uses: giraffate/clippy-action@13b9d32482f25d29ead141b79e7e04e7900281e0 # v1
        if: matrix.target == 'x86_64-unknown-linux-musl' && github.event_name != 'release'
        with:
          clippy_flags: --no-deps --all-targets --all-features -- -D warnings
          reporter: github-check
          fail_on_error: true

      - name: '🔍 Static analysis: run rustfmt'
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: cargo fmt --check --all

      - name: '🔍 Static analysis: run cargo deny'
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: cargo deny check

      - name: ✔️ Run tests
        run: cargo test --release --target ${{ matrix.target }} -Zdoctest-xcompile
          -p optivorbis -p optivorbis_cli -p vorbis_bitpack

      - name: 📚 Build documentation
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: cargo doc

      - name: 🔨 Build CLI executable
        run: cargo build --target ${{ matrix.target }} --release
            -Z build-std=panic_abort,core,std,alloc,proc_macro
            -Z build-std-features=panic_immediate_abort

      - name: 📤 Upload CLI executable artifact
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4
        with:
          name: OptiVorbis CLI (${{ matrix.target }})
          path: |
            target/${{ matrix.target }}/release/optivorbis*
            !target/${{ matrix.target }}/release/optivorbis.d

  web_demo:
    name: Web demo

    needs: ci
    runs-on: ubuntu-22.04

    # Exclude in-repo PRs from running this job
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork

    defaults:
      run:
        working-directory: web

    steps:
      - name: 📥 Checkout source
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0 # Keep the commit history for proper version information

      - name: 🧰 Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
        with:
          node-version: 20

      - name: 🧰 Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: 💨 Set up sccache
        uses: mozilla-actions/sccache-action@89e9040de88b577a072e3760aaf59f585da083af # v0.0.5

      - name: 📅 Gather build date and version metadata
        shell: bash
        run: |
          echo "OPTIVORBIS_VERSION=$(git describe --tags --dirty=-custom --always)" >> "$GITHUB_ENV"
          echo "OPTIVORBIS_BUILD_DATE=$(date -u +%Y-%m-%d)" >> "$GITHUB_ENV"

      - name: 🔨 Build web demo
        run: npm ci

      - name: '🔍 Static analysis: ESLint'
        run: npm run lint

      - name: 📤 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4
        if: github.ref == 'refs/heads/master' # Only run for pushes to the master branch
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/web
